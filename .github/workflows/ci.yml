name: CI

on:
  push:
  pull_request:
  release:
    types:
      - published

env:
  MINIMUM_PYTHON_VERSION: '3.8'

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  precommit:
    runs-on: ubuntu-latest
    steps:
      - name: Install Python ${{ env.MINIMUM_PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MINIMUM_PYTHON_VERSION }}
      - uses: actions/checkout@v3
      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          python -m pip install pre-commit virtualenv!=20.0.6
          pre-commit install
      - name: Run static code inspections
        run: pre-commit run --all-files

  build:
    runs-on: ubuntu-latest
    permissions:
      # These permissions are needed to interact with GitHub's OIDC Token endpoint.
      id-token: write
      contents: read
    strategy:
      fail-fast: false # Try to work around ECS errors
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox-gh-actions poetry
      - name: Install openslide and libvips dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y meson
          python -m pip install ninja
          sudo apt-get install -y libcairo2-dev libgdk-pixbuf2.0-dev libglib2.0-dev libjpeg-turbo8-dev libpng-dev libtiff-dev libxml2-dev libopenjp2-7-dev libsqlite3-dev libz3-dev
      - name: Build openslide
        run: |
          mkdir -p __deps
          cd __deps
          git clone https://github.com/openslide/openslide.git openslide
          cd openslide
          meson setup --prefix "$PWD/../openslide-install" --buildtype release --optimization 3 builddir
          meson compile -C builddir
          meson install -C builddir
      - name: Run tox
        run: tox
